// Copyright 2024 Antrea Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	"context"

	v1alpha1 "antrea.io/antrea/pkg/apis/stats/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	testing "k8s.io/client-go/testing"
)

// FakeNodeIPLatencyStats implements NodeIPLatencyStatInterface
type FakeNodeIPLatencyStats struct {
	Fake *FakeStatsV1alpha1
}

var nodeiplatencystatsResource = v1alpha1.SchemeGroupVersion.WithResource("nodeiplatencystats")

var nodeiplatencystatsKind = v1alpha1.SchemeGroupVersion.WithKind("NodeIPLatencyStat")

// Create takes the representation of a nodeIPLatencyStat and creates it.  Returns the server's representation of the nodeIPLatencyStat, and an error, if there is any.
func (c *FakeNodeIPLatencyStats) Create(ctx context.Context, nodeIPLatencyStat *v1alpha1.NodeIPLatencyStat, opts v1.CreateOptions) (result *v1alpha1.NodeIPLatencyStat, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewRootCreateAction(nodeiplatencystatsResource, nodeIPLatencyStat), &v1alpha1.NodeIPLatencyStat{})
	if obj == nil {
		return nil, err
	}
	return obj.(*v1alpha1.NodeIPLatencyStat), err
}
